Feature: User Authentication with JWT
As a user, I want to securely authenticate myself using JWT to access my account and protected resources.

Payload:
- username (string)
- password (string)

Specification:
- When required fields are missing:
  - Throw an error message: "Please provide both username and password"
- When data types are incorrect:
  - Throw an error message: "Invalid data types for username or password"
- When username does not exist:
  - Throw an error message: "Username not found"
- When password is invalid:
  - Throw an error message: "Invalid password"
- When payload is valid and password matches:
  - Generate a JWT:
    - Include user ID and other relevant information in the payload
    - Sign the JWT with a secure secret key
    - Set an appropriate expiration time for the token
  - Return a response:
    - Send the generated JWT to the client
    - Include a message indicating successful authentication

System-Side Notes:
  - JWT library: Utilize a secure JWT library for token generation and verification
  - Secret key: Protect the secret key used for signing JWTs
  - Token storage: Consider storing JWTs securely on the client-side (eg, in local storage or cookies with appropriate flags)
  - Token validation: Verify the authenticity and integrity of JWTs on each protected request
  - Token expiration: Handle expired tokens gracefully, prompting re-authentication
